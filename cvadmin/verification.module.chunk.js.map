{"version":3,"sources":["E:/ws/CapGemini/cvadmin/src/app/pages/verification/verification-routing.module.ts","E:/ws/CapGemini/cvadmin/src/app/pages/verification/verification.component.ts","E:/ws/CapGemini/cvadmin/src/app/pages/verification/verification.module.ts","E:/ws/CapGemini/cvadmin/src/app/pages/verification/verify-face/verify-face.component.html","E:/ws/CapGemini/cvadmin/src/app/pages/verification/verify-face/verify-face.component.scss","E:/ws/CapGemini/cvadmin/src/app/pages/verification/verify-face/verify-face.component.ts"],"names":[],"mappings":"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","file":"verification.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { VerificationComponent } from './verification.component';\r\nimport { VerifyFaceComponent } from './verify-face/verify-face.component';\r\n\r\n\r\nconst routes: Routes = [{\r\n    path: '',\r\n    component: VerificationComponent,\r\n    children: [{\r\n        path: 'verify-face',\r\n        component: VerifyFaceComponent,\r\n    },\r\n    ],\r\n}];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class VerificationRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n    VerificationComponent,\r\n    VerifyFaceComponent,\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// E:/ws/CapGemini/cvadmin/src/app/pages/verification/verification-routing.module.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-verification',\r\n  template: `<router-outlet></router-outlet>`,\r\n})\r\nexport class VerificationComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/ws/CapGemini/cvadmin/src/app/pages/verification/verification.component.ts","import { NgModule } from '@angular/core';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { VerificationRoutingModule, routedComponents } from './verification-routing.module';\r\n\r\nimport { SmartTableService } from '../../@core/data/smart-table.service';\r\nimport { UsualModule } from '../../@usual/usual.module';\r\nimport { WebCamModule } from 'ack-angular-webcam';\r\n@NgModule({\r\n    imports: [\r\n        ThemeModule,\r\n        VerificationRoutingModule,\r\n        Ng2SmartTableModule,\r\n        UsualModule,\r\n        WebCamModule,\r\n    ],\r\n    declarations: [\r\n        ...routedComponents,\r\n    ],\r\n    providers: [\r\n        SmartTableService,\r\n    ],\r\n    entryComponents: [\r\n    ],\r\n})\r\nexport class VerificationModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// E:/ws/CapGemini/cvadmin/src/app/pages/verification/verification.module.ts","module.exports = \"<nb-card>\\r\\n    <nb-card-header>\\r\\n        Verify Person\\r\\n        <div class=\\\"ddl float-right\\\">\\r\\n            <select class=\\\"form-control form-control-success\\\" [(ngModel)]=\\\"selectedGroup\\\" (change)=\\\"onGroupChange()\\\">\\r\\n                <option *ngFor=\\\"let c of groupList\\\" [ngValue]=\\\"c\\\">{{c.name}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n    </nb-card-header>\\r\\n\\r\\n    <nb-card-body>\\r\\n        <form novalidate>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <ack-webcam [(ref)]=\\\"webcam\\\" [options]=\\\"webcamOption\\\"></ack-webcam>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <button class=\\\"btn btn-md btn-hero-secondary col-sm-3 col-form-label\\\" (click)=\\\"verify()\\\">Verify</button>\\r\\n                    <h1>{{identifiedPerson}}</h1>\\r\\n                    <span style=\\\"color:red\\\">{{errorMessage}}</span>\\r\\n                    <br/>\\r\\n                    <button class=\\\"btn btn-success\\\" *ngIf=\\\"isIdentified\\\">Authenticated</button>\\r\\n                    <button class=\\\"btn btn-danger\\\" *ngIf=\\\"!isIdentified\\\">Not Authenticated</button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-sm-9\\\">\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </form>\\r\\n    </nb-card-body>\\r\\n</nb-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/ws/CapGemini/cvadmin/src/app/pages/verification/verify-face/verify-face.component.html\n// module id = ../../../../../src/app/pages/verification/verify-face/verify-face.component.html\n// module chunks = verification.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This is a starting point where we declare the maps of themes and globally available functions/mixins\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n:host-context(.nb-theme-default) .ddl select {\\n  margin-top: -10px; }\\n:host-context(.nb-theme-default) nb-card {\\n  -webkit-transform: translate3d(0, 0, 0);\\n          transform: translate3d(0, 0, 0); }\\n:host-context(.nb-theme-cosmic) .ddl select {\\n  margin-top: -10px; }\\n:host-context(.nb-theme-cosmic) nb-card {\\n  -webkit-transform: translate3d(0, 0, 0);\\n          transform: translate3d(0, 0, 0); }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/ws/CapGemini/cvadmin/src/app/pages/verification/verify-face/verify-face.component.scss\n// module id = ../../../../../src/app/pages/verification/verify-face/verify-face.component.scss\n// module chunks = verification.module","import { Component, OnInit } from '@angular/core';\r\nimport { GroupService, IGroup } from '../../../@core/data/group.service';\r\nimport { PersonService } from '../../../@core/data/person.service';\r\nimport { FaceService } from '../../../@core/data/face.service';\r\nimport { WebCamComponent } from 'ack-angular-webcam';\r\n\r\n@Component({\r\n    selector: 'ngx-verify-face-list',\r\n    templateUrl: './verify-face.component.html',\r\n    styleUrls: ['./verify-face.component.scss'],\r\n})\r\nexport class VerifyFaceComponent implements OnInit {\r\n    identifiedPerson: string;\r\n    isIdentified: boolean = false;\r\n    errorMessage: string;\r\n    groupList: IGroup[];\r\n    selectedGroup: IGroup;\r\n\r\n    webcam: WebCamComponent;\r\n    base64;\r\n    webcamOption = {\r\n        audio: false,\r\n        video: true,\r\n        width: 500,\r\n        height: 370,\r\n        fallbackMode: 'callback',\r\n        fallbackSrc: 'jscam_canvas_only.swf',\r\n        fallbackQuality: 85,\r\n    }\r\n\r\n    constructor(private groupSvc: GroupService,\r\n        private service: FaceService,\r\n        private personSvc: PersonService,\r\n    ) {\r\n    }\r\n    ngOnInit() {\r\n        this.getPersonList();\r\n    }\r\n\r\n\r\n    b64toBlob(b64Data, contentType, sliceSize?) {\r\n        contentType = contentType || '';\r\n        sliceSize = sliceSize || 512;\r\n\r\n        const byteCharacters = atob(b64Data);\r\n        const byteArrays = [];\r\n\r\n        for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n            const slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n            const byteNumbers = new Array(slice.length);\r\n            for (let i = 0; i < slice.length; i++) {\r\n                byteNumbers[i] = slice.charCodeAt(i);\r\n            }\r\n\r\n            const byteArray = new Uint8Array(byteNumbers);\r\n\r\n            byteArrays.push(byteArray);\r\n        }\r\n\r\n        const blob = new Blob(byteArrays, { type: contentType });\r\n        return blob;\r\n    }\r\n\r\n    genBase64() {\r\n        this.webcam.getBase64()\r\n            .then(base => {\r\n                this.base64 = base;\r\n            })\r\n            .catch(e => console.error(e))\r\n    }\r\n\r\n    getPersonList() {\r\n        if (this.selectedGroup) {\r\n            // this.service.getPersonList(this.selectedGroup.personGroupId).subscribe(person => {\r\n            //     person.forEach(x => { x.personGroupId = this.selectedGroup.personGroupId });\r\n            //     this.source.load(person);\r\n            // });\r\n        } else {\r\n            this.groupSvc.getGroup().subscribe(data => {\r\n                this.groupList = data;\r\n                this.selectedGroup = data[0];\r\n                // this.service.getPersonList(data[0].personGroupId).subscribe(person => {\r\n                //     person.forEach(x => { x.personGroupId = this.selectedGroup.personGroupId });\r\n                //     this.source.load(person);\r\n                // });\r\n            });\r\n        }\r\n    }\r\n\r\n    verify() {\r\n        this.identifiedPerson = '';\r\n        this.errorMessage = '';\r\n        this.isIdentified = false;\r\n        this.webcam.getBase64()\r\n            .then(base => {\r\n                this.base64 = base;\r\n                const block = this.base64.split(';');\r\n                const contentType = block[0].split(':')[1];\r\n                const realData = block[1].split(',')[1];\r\n                const blob = this.b64toBlob(realData, contentType);\r\n                this.service.detect(blob).subscribe(detectResp => {\r\n                    const faceIds = [];\r\n                    detectResp.forEach(x => {\r\n                        faceIds.push(x.faceId);\r\n                    });\r\n                    if (faceIds.length > 0) {\r\n                        this.service.identify(this.selectedGroup.personGroupId, faceIds).subscribe(identifyResp => {\r\n                            this.personSvc.getPersonList(this.selectedGroup.personGroupId).subscribe(personlistResp => {\r\n                                setTimeout(() => this.isIdentified = false, 0)\r\n                                personlistResp.forEach(x => {\r\n                                    if (x.personId === identifyResp[0].candidates[0].personId) {\r\n                                        setTimeout(() => {\r\n                                            this.isIdentified = true;\r\n                                            this.identifiedPerson = x.name;\r\n                                        }, 0)\r\n\r\n                                    }\r\n                                })\r\n                            })\r\n                            // this.service.verify(this.selectedGroup.personGroupId, identifyResp[0].candidates[0].personId, identifyResp[0].faceId).subscribe(verifyResp => {\r\n                            //     console.log(verifyResp);\r\n                            // });\r\n                        }, (error: any) => {\r\n                            this.errorMessage = 'error.error.error.message';\r\n                        });\r\n                    } else {\r\n                        this.errorMessage = 'No Face Found';\r\n                    }\r\n                });\r\n            })\r\n            .catch(e => console.error(e))\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/ws/CapGemini/cvadmin/src/app/pages/verification/verify-face/verify-face.component.ts"],"sourceRoot":"webpack:///"}